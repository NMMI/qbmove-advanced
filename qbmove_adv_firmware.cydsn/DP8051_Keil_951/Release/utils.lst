C51 COMPILER V9.51   UTILS                                                                 02/14/2017 15:09:53 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE UTILS
OBJECT MODULE PLACED IN .\DP8051_Keil_951\Release\utils.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe 
                    -.\utils.c NOIV LARGE MODDP2 OMF2 VB(1) NOIP INCDIR(.,Generated_Source\PSoC3) FF(3) DB DF(NDEBUG) WL(2) PR(.\DP8051_Keil_
                    -951\Release/utils.lst) CD OT(8,SPEED) OJ(.\DP8051_Keil_951\Release\utils.obj)

line level    source

*** MESSAGE C286 IN LINE 0 OF (null): license limits optimization to level 5
   1          // -----------------------------------------------------------------------------
   2          // Copyright (C)  qbrobotics. All rights reserved.
   3          // www.qbrobotics.com
   4          // -----------------------------------------------------------------------------
   5          
   6          /**
   7          * \file         utils.h
   8          *
   9          * \brief        Definition of utility functions.
  10          * \date         Dic. 1, 2015
  11          * \author       qbrobotics
  12          * \copyright    (C)  qbrobotics. All rights reserved.
  13          */
  14          
  15          #include <utils.h>
  16          #include <math.h>
  17          
  18          //==============================================================================
  19          //                                                               CURRENT FILTERS
  20          //==============================================================================
  21          
  22          int32 filter_i1(int32 new_value) {
  23   1      
  24   1          static int32 old_value, aux;
  25   1      
  26   1          aux = (old_value * (1024 - ALPHA) + (new_value << 6) * (ALPHA)) >> 10;
  27   1      
  28   1          old_value = aux;
  29   1      
  30   1          return (aux >> 6);
  31   1      }
  32          
  33          int32 filter_i2(int32 new_value) {
  34   1      
  35   1          static int32 old_value, aux;
  36   1      
  37   1          aux = (old_value * (1024 - ALPHA) + (new_value << 6) * (ALPHA)) >> 10;
  38   1      
  39   1          old_value = aux;
  40   1      
  41   1          return (aux >> 6);
  42   1      }
  43          
  44          //==============================================================================
  45          //                                                              VELOCITY FILTERS
  46          //==============================================================================
  47          
  48          int32 filter_vel_1(int32 new_value) {
  49   1      
  50   1          static int32 old_value, aux;
  51   1      
  52   1          aux = (old_value * (1024 - BETA) + (new_value << 6) * (BETA)) / 1024;
C51 COMPILER V9.51   UTILS                                                                 02/14/2017 15:09:53 PAGE 2   

  53   1      
  54   1          old_value = aux;
  55   1      
  56   1          return (aux >> 6);
  57   1      }
  58          
  59          int32 filter_vel_2(int32 new_value) {
  60   1      
  61   1          static int32 old_value, aux;
  62   1      
  63   1          aux = (old_value * (1024 - BETA) + (new_value << 6) * (BETA)) / 1024;
  64   1      
  65   1          old_value = aux;
  66   1      
  67   1          return (aux >> 6);
  68   1      }
  69          
  70          int32 filter_vel_3(int32 new_value) {
  71   1      
  72   1          static int32 old_value, aux;
  73   1      
  74   1          aux = (old_value * (1024 - BETA) + (new_value << 6) * (BETA)) / 1024;
  75   1      
  76   1          old_value = aux;
  77   1      
  78   1          return (aux >> 6);
  79   1      }
  80          
  81          
  82          //==============================================================================
  83          //                                                                CHECK ENC DATA
  84          //==============================================================================
  85          
  86          // Returns 1 if the encoder data is correct, 0 otherwise
  87          
  88          CYBIT check_enc_data(const uint32 *value) {
  89   1      
  90   1          const uint8* CYIDATA p = (const uint8*)value;
  91   1          uint8 CYDATA a = *p;
  92   1      
  93   1          a = a ^ *(++p);
  94   1          a = a ^ *(++p);
  95   1          a = a ^ *(++p);
  96   1          a = (a & 0x0F) ^ (a>>4);
  97   1      
  98   1          return (0x9669 >> a) & 0x01;
  99   1          //0x9669 is a bit vector representing the !(bitwise XOR) of 4bits
 100   1      }
 101          
 102          
 103          //==============================================================================
 104          //                                                             CHECKSUM FUNCTION
 105          //==============================================================================
 106          
 107          // Performs a XOR byte by byte on the entire vector
 108          
 109          uint8 LCRChecksum(uint8 *data_array, uint8 data_length) {
 110   1          
 111   1          uint8 CYDATA i;
 112   1          uint8 CYDATA checksum = 0x00;
 113   1          
 114   1          for(i = 0; i < data_length; ++i)
C51 COMPILER V9.51   UTILS                                                                 02/14/2017 15:09:53 PAGE 3   

 115   1             checksum ^= data_array[i];
 116   1        
 117   1          return checksum;
 118   1      }
 119          //==============================================================================
 120          //                                                                COUNTERS RESET
 121          //==============================================================================
 122          
 123          void reset_counters()
 124          {
 125   1          g_count.activ = 0;
 126   1          g_count.set_inputs = 0;
 127   1          g_count.set_pos_stiff = 0;
 128   1          g_count.get_meas = 0;
 129   1          g_count.get_curr = 0;
 130   1          g_count.get_curr_meas = 0;
 131   1          g_count.get_vel = 0;
 132   1          g_count.get_activ = 0;
 133   1          g_count.get_inputs = 0;
 134   1          g_count.get_info = 0;
 135   1          g_count.set_param = 0;
 136   1          g_count.get_param = 0;
 137   1          g_count.ping = 0;
 138   1          g_count.store_param = 0;
 139   1          g_count.store_default = 0;
 140   1          g_count.restore = 0;
 141   1          g_count.init = 0;
 142   1          g_count.bootloader = 0;
 143   1          g_count.calibrate = 0;
 144   1          g_count.get_counts = 0;
 145   1      }
 146          
 147          //==============================================================================
 148          //                                                                  PWM GET SIGN
 149          //==============================================================================
 150          
 151          int8 get_pwm_sign_1(int32 pwm_input)
 152          {
 153   1          static int8 prev_sign;
 154   1          if(pwm_input > 0) {
 155   2              prev_sign = 1;
 156   2              return 1;
 157   2          }
 158   1          else {
 159   2              if(pwm_input < 0) {
 160   3                  prev_sign = -1;
 161   3                  return -1;
 162   3              }
 163   2              else
 164   2                  return prev_sign;
 165   2          }
 166   1      }
 167          
 168          int8 get_pwm_sign_2(int32 pwm_input)
 169          {
 170   1          static int8 prev_sign;
 171   1          if(pwm_input > 0) {
 172   2              prev_sign = 1;
 173   2              return 1;
 174   2          }
 175   1          else {
 176   2              if(pwm_input < 0) {
C51 COMPILER V9.51   UTILS                                                                 02/14/2017 15:09:53 PAGE 4   

 177   3                  prev_sign = -1;
 178   3                  return -1;
 179   3              }
 180   2              else
 181   2                  return prev_sign;
 182   2          }
 183   1      }
 184          
 185          /* [] END OF FILE */
C51 COMPILER V9.51   UTILS                                                                 02/14/2017 15:09:53 PAGE 5   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION _filter_i1 (BEGIN)
                                           ; SOURCE LINE # 22
;---- Variable 'new_value' assigned to Register 'R4/R5/R6/R7' ----
                                           ; SOURCE LINE # 26
0000 7806              MOV     R0,#06H
0002 120000      E     LCALL   ?C?LSHL
0005 E4                CLR     A
0006 7B03              MOV     R3,#03H
0008 FA                MOV     R2,A
0009 F9                MOV     R1,A
000A F8                MOV     R0,A
000B 120000      E     LCALL   ?C?LMUL
000E C004              PUSH    AR4
0010 C005              PUSH    AR5
0012 C006              PUSH    AR6
0014 C007              PUSH    AR7
0016 E4                CLR     A
0017 7FFD              MOV     R7,#0FDH
0019 7E03              MOV     R6,#03H
001B FD                MOV     R5,A
001C FC                MOV     R4,A
001D 900000      R     MOV     DPTR,#old_value
0020 E0                MOVX    A,@DPTR
0021 F8                MOV     R0,A
0022 A3                INC     DPTR
0023 E0                MOVX    A,@DPTR
0024 F9                MOV     R1,A
0025 A3                INC     DPTR
0026 E0                MOVX    A,@DPTR
0027 FA                MOV     R2,A
0028 A3                INC     DPTR
0029 E0                MOVX    A,@DPTR
002A FB                MOV     R3,A
002B 120000      E     LCALL   ?C?LMUL
002E D003              POP     AR3
0030 D002              POP     AR2
0032 D001              POP     AR1
0034 D000              POP     AR0
0036 EF                MOV     A,R7
0037 2B                ADD     A,R3
0038 FF                MOV     R7,A
0039 EE                MOV     A,R6
003A 3A                ADDC    A,R2
003B FE                MOV     R6,A
003C ED                MOV     A,R5
003D 39                ADDC    A,R1
003E FD                MOV     R5,A
003F EC                MOV     A,R4
0040 38                ADDC    A,R0
0041 FC                MOV     R4,A
0042 780A              MOV     R0,#0AH
0044 120000      E     LCALL   ?C?SLSHR
0047 900000      R     MOV     DPTR,#aux
004A 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 28
004D 900000      R     MOV     DPTR,#aux
0050 E0                MOVX    A,@DPTR
0051 FC                MOV     R4,A
0052 A3                INC     DPTR
C51 COMPILER V9.51   UTILS                                                                 02/14/2017 15:09:53 PAGE 6   

0053 E0                MOVX    A,@DPTR
0054 FD                MOV     R5,A
0055 A3                INC     DPTR
0056 E0                MOVX    A,@DPTR
0057 FE                MOV     R6,A
0058 A3                INC     DPTR
0059 E0                MOVX    A,@DPTR
005A FF                MOV     R7,A
005B 900000      R     MOV     DPTR,#old_value
005E 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 30
0061 900000      R     MOV     DPTR,#aux
0064 E0                MOVX    A,@DPTR
0065 FC                MOV     R4,A
0066 A3                INC     DPTR
0067 E0                MOVX    A,@DPTR
0068 FD                MOV     R5,A
0069 A3                INC     DPTR
006A E0                MOVX    A,@DPTR
006B FE                MOV     R6,A
006C A3                INC     DPTR
006D E0                MOVX    A,@DPTR
006E FF                MOV     R7,A
006F 7806              MOV     R0,#06H
0071 120000      E     LCALL   ?C?SLSHR
                                           ; SOURCE LINE # 31
0074         ?C0001:
0074 22                RET     
             ; FUNCTION _filter_i1 (END)

             ; FUNCTION _filter_i2 (BEGIN)
                                           ; SOURCE LINE # 33
;---- Variable 'new_value' assigned to Register 'R4/R5/R6/R7' ----
                                           ; SOURCE LINE # 37
0000 7806              MOV     R0,#06H
0002 120000      E     LCALL   ?C?LSHL
0005 E4                CLR     A
0006 7B03              MOV     R3,#03H
0008 FA                MOV     R2,A
0009 F9                MOV     R1,A
000A F8                MOV     R0,A
000B 120000      E     LCALL   ?C?LMUL
000E C004              PUSH    AR4
0010 C005              PUSH    AR5
0012 C006              PUSH    AR6
0014 C007              PUSH    AR7
0016 E4                CLR     A
0017 7FFD              MOV     R7,#0FDH
0019 7E03              MOV     R6,#03H
001B FD                MOV     R5,A
001C FC                MOV     R4,A
001D 900000      R     MOV     DPTR,#old_value
0020 E0                MOVX    A,@DPTR
0021 F8                MOV     R0,A
0022 A3                INC     DPTR
0023 E0                MOVX    A,@DPTR
0024 F9                MOV     R1,A
0025 A3                INC     DPTR
0026 E0                MOVX    A,@DPTR
0027 FA                MOV     R2,A
0028 A3                INC     DPTR
0029 E0                MOVX    A,@DPTR
C51 COMPILER V9.51   UTILS                                                                 02/14/2017 15:09:53 PAGE 7   

002A FB                MOV     R3,A
002B 120000      E     LCALL   ?C?LMUL
002E D003              POP     AR3
0030 D002              POP     AR2
0032 D001              POP     AR1
0034 D000              POP     AR0
0036 EF                MOV     A,R7
0037 2B                ADD     A,R3
0038 FF                MOV     R7,A
0039 EE                MOV     A,R6
003A 3A                ADDC    A,R2
003B FE                MOV     R6,A
003C ED                MOV     A,R5
003D 39                ADDC    A,R1
003E FD                MOV     R5,A
003F EC                MOV     A,R4
0040 38                ADDC    A,R0
0041 FC                MOV     R4,A
0042 780A              MOV     R0,#0AH
0044 120000      E     LCALL   ?C?SLSHR
0047 900000      R     MOV     DPTR,#aux
004A 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 39
004D 900000      R     MOV     DPTR,#aux
0050 E0                MOVX    A,@DPTR
0051 FC                MOV     R4,A
0052 A3                INC     DPTR
0053 E0                MOVX    A,@DPTR
0054 FD                MOV     R5,A
0055 A3                INC     DPTR
0056 E0                MOVX    A,@DPTR
0057 FE                MOV     R6,A
0058 A3                INC     DPTR
0059 E0                MOVX    A,@DPTR
005A FF                MOV     R7,A
005B 900000      R     MOV     DPTR,#old_value
005E 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 41
0061 900000      R     MOV     DPTR,#aux
0064 E0                MOVX    A,@DPTR
0065 FC                MOV     R4,A
0066 A3                INC     DPTR
0067 E0                MOVX    A,@DPTR
0068 FD                MOV     R5,A
0069 A3                INC     DPTR
006A E0                MOVX    A,@DPTR
006B FE                MOV     R6,A
006C A3                INC     DPTR
006D E0                MOVX    A,@DPTR
006E FF                MOV     R7,A
006F 7806              MOV     R0,#06H
0071 120000      E     LCALL   ?C?SLSHR
                                           ; SOURCE LINE # 42
0074         ?C0002:
0074 22                RET     
             ; FUNCTION _filter_i2 (END)

             ; FUNCTION _filter_vel_1 (BEGIN)
                                           ; SOURCE LINE # 48
;---- Variable 'new_value' assigned to Register 'R4/R5/R6/R7' ----
                                           ; SOURCE LINE # 52
0000 7806              MOV     R0,#06H
C51 COMPILER V9.51   UTILS                                                                 02/14/2017 15:09:53 PAGE 8   

0002 120000      E     LCALL   ?C?LSHL
0005 E4                CLR     A
0006 7B2C              MOV     R3,#02CH
0008 7A01              MOV     R2,#01H
000A F9                MOV     R1,A
000B F8                MOV     R0,A
000C 120000      E     LCALL   ?C?LMUL
000F C004              PUSH    AR4
0011 C005              PUSH    AR5
0013 C006              PUSH    AR6
0015 C007              PUSH    AR7
0017 E4                CLR     A
0018 7FD4              MOV     R7,#0D4H
001A 7E02              MOV     R6,#02H
001C FD                MOV     R5,A
001D FC                MOV     R4,A
001E 900000      R     MOV     DPTR,#old_value
0021 E0                MOVX    A,@DPTR
0022 F8                MOV     R0,A
0023 A3                INC     DPTR
0024 E0                MOVX    A,@DPTR
0025 F9                MOV     R1,A
0026 A3                INC     DPTR
0027 E0                MOVX    A,@DPTR
0028 FA                MOV     R2,A
0029 A3                INC     DPTR
002A E0                MOVX    A,@DPTR
002B FB                MOV     R3,A
002C 120000      E     LCALL   ?C?LMUL
002F D003              POP     AR3
0031 D002              POP     AR2
0033 D001              POP     AR1
0035 D000              POP     AR0
0037 EF                MOV     A,R7
0038 2B                ADD     A,R3
0039 FF                MOV     R7,A
003A EE                MOV     A,R6
003B 3A                ADDC    A,R2
003C FE                MOV     R6,A
003D ED                MOV     A,R5
003E 39                ADDC    A,R1
003F FD                MOV     R5,A
0040 EC                MOV     A,R4
0041 38                ADDC    A,R0
0042 FC                MOV     R4,A
0043 E4                CLR     A
0044 FB                MOV     R3,A
0045 7A04              MOV     R2,#04H
0047 F9                MOV     R1,A
0048 F8                MOV     R0,A
0049 120000      E     LCALL   ?C?SLDIV
004C 900000      R     MOV     DPTR,#aux
004F 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 54
0052 900000      R     MOV     DPTR,#aux
0055 E0                MOVX    A,@DPTR
0056 FC                MOV     R4,A
0057 A3                INC     DPTR
0058 E0                MOVX    A,@DPTR
0059 FD                MOV     R5,A
005A A3                INC     DPTR
005B E0                MOVX    A,@DPTR
C51 COMPILER V9.51   UTILS                                                                 02/14/2017 15:09:53 PAGE 9   

005C FE                MOV     R6,A
005D A3                INC     DPTR
005E E0                MOVX    A,@DPTR
005F FF                MOV     R7,A
0060 900000      R     MOV     DPTR,#old_value
0063 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 56
0066 900000      R     MOV     DPTR,#aux
0069 E0                MOVX    A,@DPTR
006A FC                MOV     R4,A
006B A3                INC     DPTR
006C E0                MOVX    A,@DPTR
006D FD                MOV     R5,A
006E A3                INC     DPTR
006F E0                MOVX    A,@DPTR
0070 FE                MOV     R6,A
0071 A3                INC     DPTR
0072 E0                MOVX    A,@DPTR
0073 FF                MOV     R7,A
0074 7806              MOV     R0,#06H
0076 120000      E     LCALL   ?C?SLSHR
                                           ; SOURCE LINE # 57
0079         ?C0003:
0079 22                RET     
             ; FUNCTION _filter_vel_1 (END)

             ; FUNCTION _filter_vel_2 (BEGIN)
                                           ; SOURCE LINE # 59
;---- Variable 'new_value' assigned to Register 'R4/R5/R6/R7' ----
                                           ; SOURCE LINE # 63
0000 7806              MOV     R0,#06H
0002 120000      E     LCALL   ?C?LSHL
0005 E4                CLR     A
0006 7B2C              MOV     R3,#02CH
0008 7A01              MOV     R2,#01H
000A F9                MOV     R1,A
000B F8                MOV     R0,A
000C 120000      E     LCALL   ?C?LMUL
000F C004              PUSH    AR4
0011 C005              PUSH    AR5
0013 C006              PUSH    AR6
0015 C007              PUSH    AR7
0017 E4                CLR     A
0018 7FD4              MOV     R7,#0D4H
001A 7E02              MOV     R6,#02H
001C FD                MOV     R5,A
001D FC                MOV     R4,A
001E 900000      R     MOV     DPTR,#old_value
0021 E0                MOVX    A,@DPTR
0022 F8                MOV     R0,A
0023 A3                INC     DPTR
0024 E0                MOVX    A,@DPTR
0025 F9                MOV     R1,A
0026 A3                INC     DPTR
0027 E0                MOVX    A,@DPTR
0028 FA                MOV     R2,A
0029 A3                INC     DPTR
002A E0                MOVX    A,@DPTR
002B FB                MOV     R3,A
002C 120000      E     LCALL   ?C?LMUL
002F D003              POP     AR3
0031 D002              POP     AR2
C51 COMPILER V9.51   UTILS                                                                 02/14/2017 15:09:53 PAGE 10  

0033 D001              POP     AR1
0035 D000              POP     AR0
0037 EF                MOV     A,R7
0038 2B                ADD     A,R3
0039 FF                MOV     R7,A
003A EE                MOV     A,R6
003B 3A                ADDC    A,R2
003C FE                MOV     R6,A
003D ED                MOV     A,R5
003E 39                ADDC    A,R1
003F FD                MOV     R5,A
0040 EC                MOV     A,R4
0041 38                ADDC    A,R0
0042 FC                MOV     R4,A
0043 E4                CLR     A
0044 FB                MOV     R3,A
0045 7A04              MOV     R2,#04H
0047 F9                MOV     R1,A
0048 F8                MOV     R0,A
0049 120000      E     LCALL   ?C?SLDIV
004C 900000      R     MOV     DPTR,#aux
004F 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 65
0052 900000      R     MOV     DPTR,#aux
0055 E0                MOVX    A,@DPTR
0056 FC                MOV     R4,A
0057 A3                INC     DPTR
0058 E0                MOVX    A,@DPTR
0059 FD                MOV     R5,A
005A A3                INC     DPTR
005B E0                MOVX    A,@DPTR
005C FE                MOV     R6,A
005D A3                INC     DPTR
005E E0                MOVX    A,@DPTR
005F FF                MOV     R7,A
0060 900000      R     MOV     DPTR,#old_value
0063 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 67
0066 900000      R     MOV     DPTR,#aux
0069 E0                MOVX    A,@DPTR
006A FC                MOV     R4,A
006B A3                INC     DPTR
006C E0                MOVX    A,@DPTR
006D FD                MOV     R5,A
006E A3                INC     DPTR
006F E0                MOVX    A,@DPTR
0070 FE                MOV     R6,A
0071 A3                INC     DPTR
0072 E0                MOVX    A,@DPTR
0073 FF                MOV     R7,A
0074 7806              MOV     R0,#06H
0076 120000      E     LCALL   ?C?SLSHR
                                           ; SOURCE LINE # 68
0079         ?C0004:
0079 22                RET     
             ; FUNCTION _filter_vel_2 (END)

             ; FUNCTION _filter_vel_3 (BEGIN)
                                           ; SOURCE LINE # 70
;---- Variable 'new_value' assigned to Register 'R4/R5/R6/R7' ----
                                           ; SOURCE LINE # 74
0000 7806              MOV     R0,#06H
C51 COMPILER V9.51   UTILS                                                                 02/14/2017 15:09:53 PAGE 11  

0002 120000      E     LCALL   ?C?LSHL
0005 E4                CLR     A
0006 7B2C              MOV     R3,#02CH
0008 7A01              MOV     R2,#01H
000A F9                MOV     R1,A
000B F8                MOV     R0,A
000C 120000      E     LCALL   ?C?LMUL
000F C004              PUSH    AR4
0011 C005              PUSH    AR5
0013 C006              PUSH    AR6
0015 C007              PUSH    AR7
0017 E4                CLR     A
0018 7FD4              MOV     R7,#0D4H
001A 7E02              MOV     R6,#02H
001C FD                MOV     R5,A
001D FC                MOV     R4,A
001E 900000      R     MOV     DPTR,#old_value
0021 E0                MOVX    A,@DPTR
0022 F8                MOV     R0,A
0023 A3                INC     DPTR
0024 E0                MOVX    A,@DPTR
0025 F9                MOV     R1,A
0026 A3                INC     DPTR
0027 E0                MOVX    A,@DPTR
0028 FA                MOV     R2,A
0029 A3                INC     DPTR
002A E0                MOVX    A,@DPTR
002B FB                MOV     R3,A
002C 120000      E     LCALL   ?C?LMUL
002F D003              POP     AR3
0031 D002              POP     AR2
0033 D001              POP     AR1
0035 D000              POP     AR0
0037 EF                MOV     A,R7
0038 2B                ADD     A,R3
0039 FF                MOV     R7,A
003A EE                MOV     A,R6
003B 3A                ADDC    A,R2
003C FE                MOV     R6,A
003D ED                MOV     A,R5
003E 39                ADDC    A,R1
003F FD                MOV     R5,A
0040 EC                MOV     A,R4
0041 38                ADDC    A,R0
0042 FC                MOV     R4,A
0043 E4                CLR     A
0044 FB                MOV     R3,A
0045 7A04              MOV     R2,#04H
0047 F9                MOV     R1,A
0048 F8                MOV     R0,A
0049 120000      E     LCALL   ?C?SLDIV
004C 900000      R     MOV     DPTR,#aux
004F 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 76
0052 900000      R     MOV     DPTR,#aux
0055 E0                MOVX    A,@DPTR
0056 FC                MOV     R4,A
0057 A3                INC     DPTR
0058 E0                MOVX    A,@DPTR
0059 FD                MOV     R5,A
005A A3                INC     DPTR
005B E0                MOVX    A,@DPTR
C51 COMPILER V9.51   UTILS                                                                 02/14/2017 15:09:53 PAGE 12  

005C FE                MOV     R6,A
005D A3                INC     DPTR
005E E0                MOVX    A,@DPTR
005F FF                MOV     R7,A
0060 900000      R     MOV     DPTR,#old_value
0063 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 78
0066 900000      R     MOV     DPTR,#aux
0069 E0                MOVX    A,@DPTR
006A FC                MOV     R4,A
006B A3                INC     DPTR
006C E0                MOVX    A,@DPTR
006D FD                MOV     R5,A
006E A3                INC     DPTR
006F E0                MOVX    A,@DPTR
0070 FE                MOV     R6,A
0071 A3                INC     DPTR
0072 E0                MOVX    A,@DPTR
0073 FF                MOV     R7,A
0074 7806              MOV     R0,#06H
0076 120000      E     LCALL   ?C?SLSHR
                                           ; SOURCE LINE # 79
0079         ?C0005:
0079 22                RET     
             ; FUNCTION _filter_vel_3 (END)

             ; FUNCTION _check_enc_data (BEGIN)
                                           ; SOURCE LINE # 88
;---- Variable 'value' assigned to Register 'R1/R2/R3' ----
                                           ; SOURCE LINE # 90
0000 7800        R     MOV     R0,#LOW p
0002 A603              MOV     @R0,AR3
0004 08                INC     R0
0005 A602              MOV     @R0,AR2
0007 08                INC     R0
0008 A601              MOV     @R0,AR1
                                           ; SOURCE LINE # 91
000A 120000      E     LCALL   ?C?CLDPTR
000D F500        R     MOV     a,A
                                           ; SOURCE LINE # 93
000F 7800        R     MOV     R0,#LOW p
0011 8603              MOV     AR3,@R0
0013 08                INC     R0
0014 08                INC     R0
0015 06                INC     @R0
0016 E6                MOV     A,@R0
0017 18                DEC     R0
0018 7001              JNZ     ?C0022
001A 06                INC     @R0
001B         ?C0022:
001B F9                MOV     R1,A
001C 8602              MOV     AR2,@R0
001E 120000      E     LCALL   ?C?CLDPTR
0021 6200        R     XRL     a,A
                                           ; SOURCE LINE # 94
0023 7800        R     MOV     R0,#LOW p
0025 8603              MOV     AR3,@R0
0027 08                INC     R0
0028 08                INC     R0
0029 06                INC     @R0
002A E6                MOV     A,@R0
002B 18                DEC     R0
C51 COMPILER V9.51   UTILS                                                                 02/14/2017 15:09:53 PAGE 13  

002C 7001              JNZ     ?C0023
002E 06                INC     @R0
002F         ?C0023:
002F F9                MOV     R1,A
0030 8602              MOV     AR2,@R0
0032 120000      E     LCALL   ?C?CLDPTR
0035 6200        R     XRL     a,A
                                           ; SOURCE LINE # 95
0037 7800        R     MOV     R0,#LOW p
0039 8603              MOV     AR3,@R0
003B 08                INC     R0
003C 08                INC     R0
003D 06                INC     @R0
003E E6                MOV     A,@R0
003F 18                DEC     R0
0040 7001              JNZ     ?C0024
0042 06                INC     @R0
0043         ?C0024:
0043 F9                MOV     R1,A
0044 8602              MOV     AR2,@R0
0046 120000      E     LCALL   ?C?CLDPTR
0049 6200        R     XRL     a,A
                                           ; SOURCE LINE # 96
004B E500        R     MOV     A,a
004D C4                SWAP    A
004E 540F              ANL     A,#0FH
0050 FF                MOV     R7,A
0051 E500        R     MOV     A,a
0053 540F              ANL     A,#0FH
0055 6F                XRL     A,R7
0056 F500        R     MOV     a,A
                                           ; SOURCE LINE # 98
0058 FF                MOV     R7,A
0059 7469              MOV     A,#069H
005B 7E96              MOV     R6,#096H
005D A807              MOV     R0,AR7
005F 08                INC     R0
0060 8005              SJMP    ?C0026
0062         ?C0025:
0062 CE                XCH     A,R6
0063 C3                CLR     C
0064 13                RRC     A
0065 CE                XCH     A,R6
0066 13                RRC     A
0067         ?C0026:
0067 D8F9              DJNZ    R0,?C0025
0069 13                RRC     A
                                           ; SOURCE LINE # 100
006A         ?C0006:
006A 22                RET     
             ; FUNCTION _check_enc_data (END)

             ; FUNCTION _LCRChecksum (BEGIN)
                                           ; SOURCE LINE # 109
0000 900000      R     MOV     DPTR,#data_array
0003 EB                MOV     A,R3
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 EA                MOV     A,R2
0007 F0                MOVX    @DPTR,A
0008 A3                INC     DPTR
0009 E9                MOV     A,R1
C51 COMPILER V9.51   UTILS                                                                 02/14/2017 15:09:53 PAGE 14  

000A F0                MOVX    @DPTR,A
;---- Variable 'data_length' assigned to Register 'R5' ----
                                           ; SOURCE LINE # 112
000B E4                CLR     A
000C F500        R     MOV     checksum,A
                                           ; SOURCE LINE # 114
000E F500        R     MOV     i,A
0010         ?C0007:
0010 E500        R     MOV     A,i
0012 C3                CLR     C
0013 9D                SUBB    A,R5
0014 5019              JNC     ?C0008
                                           ; SOURCE LINE # 115
0016 900000      R     MOV     DPTR,#data_array
0019 E0                MOVX    A,@DPTR
001A FB                MOV     R3,A
001B A3                INC     DPTR
001C E0                MOVX    A,@DPTR
001D FA                MOV     R2,A
001E A3                INC     DPTR
001F E0                MOVX    A,@DPTR
0020 2500        R     ADD     A,i
0022 F9                MOV     R1,A
0023 E4                CLR     A
0024 3A                ADDC    A,R2
0025 FA                MOV     R2,A
0026 120000      E     LCALL   ?C?CLDPTR
0029 6200        R     XRL     checksum,A
002B 0500        R     INC     i
002D 80E1              SJMP    ?C0007
002F         ?C0008:
                                           ; SOURCE LINE # 117
002F AF00        R     MOV     R7,checksum
                                           ; SOURCE LINE # 118
0031         ?C0010:
0031 22                RET     
             ; FUNCTION _LCRChecksum (END)

             ; FUNCTION reset_counters (BEGIN)
                                           ; SOURCE LINE # 123
                                           ; SOURCE LINE # 124
                                           ; SOURCE LINE # 125
0000 E4                CLR     A
0001 900000      E     MOV     DPTR,#g_count
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 126
0007 A3                INC     DPTR
0008 F0                MOVX    @DPTR,A
0009 A3                INC     DPTR
000A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 127
000B A3                INC     DPTR
000C F0                MOVX    @DPTR,A
000D A3                INC     DPTR
000E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 128
000F A3                INC     DPTR
0010 F0                MOVX    @DPTR,A
0011 A3                INC     DPTR
0012 F0                MOVX    @DPTR,A
C51 COMPILER V9.51   UTILS                                                                 02/14/2017 15:09:53 PAGE 15  

                                           ; SOURCE LINE # 129
0013 A3                INC     DPTR
0014 F0                MOVX    @DPTR,A
0015 A3                INC     DPTR
0016 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 130
0017 A3                INC     DPTR
0018 F0                MOVX    @DPTR,A
0019 A3                INC     DPTR
001A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 131
001B A3                INC     DPTR
001C F0                MOVX    @DPTR,A
001D A3                INC     DPTR
001E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 132
001F A3                INC     DPTR
0020 F0                MOVX    @DPTR,A
0021 A3                INC     DPTR
0022 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 133
0023 A3                INC     DPTR
0024 F0                MOVX    @DPTR,A
0025 A3                INC     DPTR
0026 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 134
0027 A3                INC     DPTR
0028 F0                MOVX    @DPTR,A
0029 A3                INC     DPTR
002A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 135
002B A3                INC     DPTR
002C F0                MOVX    @DPTR,A
002D A3                INC     DPTR
002E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 136
002F A3                INC     DPTR
0030 F0                MOVX    @DPTR,A
0031 A3                INC     DPTR
0032 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 137
0033 A3                INC     DPTR
0034 F0                MOVX    @DPTR,A
0035 A3                INC     DPTR
0036 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 138
0037 A3                INC     DPTR
0038 F0                MOVX    @DPTR,A
0039 A3                INC     DPTR
003A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 139
003B A3                INC     DPTR
003C F0                MOVX    @DPTR,A
003D A3                INC     DPTR
003E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 140
003F A3                INC     DPTR
0040 F0                MOVX    @DPTR,A
0041 A3                INC     DPTR
0042 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 141
0043 A3                INC     DPTR
C51 COMPILER V9.51   UTILS                                                                 02/14/2017 15:09:53 PAGE 16  

0044 F0                MOVX    @DPTR,A
0045 A3                INC     DPTR
0046 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 142
0047 A3                INC     DPTR
0048 F0                MOVX    @DPTR,A
0049 A3                INC     DPTR
004A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 143
004B A3                INC     DPTR
004C F0                MOVX    @DPTR,A
004D A3                INC     DPTR
004E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 144
004F A3                INC     DPTR
0050 F0                MOVX    @DPTR,A
0051 A3                INC     DPTR
0052 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 145
0053 22                RET     
             ; FUNCTION reset_counters (END)

             ; FUNCTION _get_pwm_sign_1 (BEGIN)
                                           ; SOURCE LINE # 151
0000 900000      R     MOV     DPTR,#pwm_input
0003 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 152
                                           ; SOURCE LINE # 154
0006 E4                CLR     A
0007 FF                MOV     R7,A
0008 FE                MOV     R6,A
0009 FD                MOV     R5,A
000A FC                MOV     R4,A
000B 900000      R     MOV     DPTR,#pwm_input
000E E0                MOVX    A,@DPTR
000F F8                MOV     R0,A
0010 A3                INC     DPTR
0011 E0                MOVX    A,@DPTR
0012 F9                MOV     R1,A
0013 A3                INC     DPTR
0014 E0                MOVX    A,@DPTR
0015 FA                MOV     R2,A
0016 A3                INC     DPTR
0017 E0                MOVX    A,@DPTR
0018 FB                MOV     R3,A
0019 D3                SETB    C
001A 120000      E     LCALL   ?C?SLCMP
001D 4008              JC      ?C0012
                                           ; SOURCE LINE # 155
001F 900000      R     MOV     DPTR,#prev_sign
0022 7401              MOV     A,#01H
0024 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 156
0025 FF                MOV     R7,A
0026 22                RET     
                                           ; SOURCE LINE # 157
0027         ?C0012:
                                           ; SOURCE LINE # 158
                                           ; SOURCE LINE # 159
0027 E4                CLR     A
0028 FF                MOV     R7,A
0029 FE                MOV     R6,A
C51 COMPILER V9.51   UTILS                                                                 02/14/2017 15:09:53 PAGE 17  

002A FD                MOV     R5,A
002B FC                MOV     R4,A
002C 900000      R     MOV     DPTR,#pwm_input
002F E0                MOVX    A,@DPTR
0030 F8                MOV     R0,A
0031 A3                INC     DPTR
0032 E0                MOVX    A,@DPTR
0033 F9                MOV     R1,A
0034 A3                INC     DPTR
0035 E0                MOVX    A,@DPTR
0036 FA                MOV     R2,A
0037 A3                INC     DPTR
0038 E0                MOVX    A,@DPTR
0039 FB                MOV     R3,A
003A C3                CLR     C
003B 120000      E     LCALL   ?C?SLCMP
003E 5008              JNC     ?C0015
                                           ; SOURCE LINE # 160
0040 900000      R     MOV     DPTR,#prev_sign
0043 74FF              MOV     A,#0FFH
0045 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 161
0046 FF                MOV     R7,A
0047 22                RET     
                                           ; SOURCE LINE # 162
0048         ?C0015:
                                           ; SOURCE LINE # 164
0048 900000      R     MOV     DPTR,#prev_sign
004B E0                MOVX    A,@DPTR
004C FF                MOV     R7,A
                                           ; SOURCE LINE # 165
                                           ; SOURCE LINE # 166
004D         ?C0013:
004D 22                RET     
             ; FUNCTION _get_pwm_sign_1 (END)

             ; FUNCTION _get_pwm_sign_2 (BEGIN)
                                           ; SOURCE LINE # 168
0000 900000      R     MOV     DPTR,#pwm_input
0003 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 169
                                           ; SOURCE LINE # 171
0006 E4                CLR     A
0007 FF                MOV     R7,A
0008 FE                MOV     R6,A
0009 FD                MOV     R5,A
000A FC                MOV     R4,A
000B 900000      R     MOV     DPTR,#pwm_input
000E E0                MOVX    A,@DPTR
000F F8                MOV     R0,A
0010 A3                INC     DPTR
0011 E0                MOVX    A,@DPTR
0012 F9                MOV     R1,A
0013 A3                INC     DPTR
0014 E0                MOVX    A,@DPTR
0015 FA                MOV     R2,A
0016 A3                INC     DPTR
0017 E0                MOVX    A,@DPTR
0018 FB                MOV     R3,A
0019 D3                SETB    C
001A 120000      E     LCALL   ?C?SLCMP
001D 4008              JC      ?C0017
C51 COMPILER V9.51   UTILS                                                                 02/14/2017 15:09:53 PAGE 18  

                                           ; SOURCE LINE # 172
001F 900000      R     MOV     DPTR,#prev_sign
0022 7401              MOV     A,#01H
0024 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 173
0025 FF                MOV     R7,A
0026 22                RET     
                                           ; SOURCE LINE # 174
0027         ?C0017:
                                           ; SOURCE LINE # 175
                                           ; SOURCE LINE # 176
0027 E4                CLR     A
0028 FF                MOV     R7,A
0029 FE                MOV     R6,A
002A FD                MOV     R5,A
002B FC                MOV     R4,A
002C 900000      R     MOV     DPTR,#pwm_input
002F E0                MOVX    A,@DPTR
0030 F8                MOV     R0,A
0031 A3                INC     DPTR
0032 E0                MOVX    A,@DPTR
0033 F9                MOV     R1,A
0034 A3                INC     DPTR
0035 E0                MOVX    A,@DPTR
0036 FA                MOV     R2,A
0037 A3                INC     DPTR
0038 E0                MOVX    A,@DPTR
0039 FB                MOV     R3,A
003A C3                CLR     C
003B 120000      E     LCALL   ?C?SLCMP
003E 5008              JNC     ?C0020
                                           ; SOURCE LINE # 177
0040 900000      R     MOV     DPTR,#prev_sign
0043 74FF              MOV     A,#0FFH
0045 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 178
0046 FF                MOV     R7,A
0047 22                RET     
                                           ; SOURCE LINE # 179
0048         ?C0020:
                                           ; SOURCE LINE # 181
0048 900000      R     MOV     DPTR,#prev_sign
004B E0                MOVX    A,@DPTR
004C FF                MOV     R7,A
                                           ; SOURCE LINE # 182
                                           ; SOURCE LINE # 183
004D         ?C0018:
004D 22                RET     
             ; FUNCTION _get_pwm_sign_2 (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    997    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     42      11
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       3
   IDATA SIZE       =   ----       3
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
C51 COMPILER V9.51   UTILS                                                                 02/14/2017 15:09:53 PAGE 19  

   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
